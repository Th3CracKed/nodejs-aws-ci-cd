version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 10
  pre_build:
    commands:
      - echo Installing source NPM dependencies...
      - npm install
  build:
    commands:
      - echo Build started on `date`
      - npm run build-ts
      - aws s3 sync . s3://- aws s3 sync . s3://codebuild-us-east-angular-front-dev/sonarqube/source/backend
      - npm run test:ci || exit 0
  post_build:
    commands:
      # - if [ $CODEBUILD_BUILD_SUCCEEDING = "0" ]; then echo Build failed; exit 1; fi
      - "[ -d ./coverage ] && echo 'coverage directory found' && aws s3 sync ./coverage s3://codebuild-us-east-angular-front-dev/coverage/backend --acl=public-read --exclude 'backups/*|'"
      - "aws s3 sync s3://codebuild-us-east-angular-front-dev/coverage/backend/lcov-report/ s3://codebuild-us-east-angular-front-dev/coverage/backend --acl=public-read --exclude 'backups/*|aws/*|sonarqube/*|linter/*|lcov.info' && aws s3 rm s3://codebuild-us-east-angular-front-dev/coverage/backend/lcov-report/ --recursive"
      - NOW=$(date +"%Y-%m-%d-%T")
      - "aws s3 cp s3://codebuild-us-east-angular-front-dev/coverage/backend/ s3://codebuild-us-east-angular-front-dev/coverage/backend/backups/$NOW --recursive --exclude 'backups/*'"
      - npm run tslint:ci
      - echo Build completed on `date`

reports: #New
  CoverageReports: # CodeBuild will create a report group called "CoverageReports".
    files: #Store all of the files
      - "**/*"
    base-directory: "coverage/aws" # Location of the reports
artifacts:
  files:
    - "dist/**/*"
    - "coverage/**/*"
    - "appspec.yml"
    - "scripts/**/*"
  base-directory: "."
